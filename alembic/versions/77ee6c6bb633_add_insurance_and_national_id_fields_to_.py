"""Add insurance and national_id fields to patients

Revision ID: 77ee6c6bb633
Revises: cc8429e20a7d
Create Date: 2025-08-27 14:54:25.730359

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '77ee6c6bb633'
down_revision = 'cc8429e20a7d'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('analyses', 'analysis_type',
               existing_type=postgresql.ENUM('DIAGNOSIS_ASSISTANCE', 'TREATMENT_RECOMMENDATION', 'FOLLOW_UP_PLANNING', 'GENERAL_ANALYSIS', name='analysistypeenum'),
               nullable=True)
    op.add_column('patients', sa.Column('national_id', sa.String(length=20), nullable=True))
    op.add_column('patients', sa.Column('insurance_provider', sa.String(length=100), nullable=True))
    op.add_column('patients', sa.Column('insurance_policy_number', sa.String(length=50), nullable=True))
    op.add_column('patients', sa.Column('insurance_group_number', sa.String(length=50), nullable=True))
    op.drop_index(op.f('ix_patients_medical_record_number'), table_name='patients')
    op.create_index(op.f('ix_patients_national_id'), 'patients', ['national_id'], unique=False)
    op.drop_column('patients', 'medical_record_number')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('patients', sa.Column('medical_record_number', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_patients_national_id'), table_name='patients')
    op.create_index(op.f('ix_patients_medical_record_number'), 'patients', ['medical_record_number'], unique=True)
    op.drop_column('patients', 'insurance_group_number')
    op.drop_column('patients', 'insurance_policy_number')
    op.drop_column('patients', 'insurance_provider')
    op.drop_column('patients', 'national_id')
    op.alter_column('analyses', 'analysis_type',
               existing_type=postgresql.ENUM('DIAGNOSIS_ASSISTANCE', 'TREATMENT_RECOMMENDATION', 'FOLLOW_UP_PLANNING', 'GENERAL_ANALYSIS', name='analysistypeenum'),
               nullable=False)
    # ### end Alembic commands ###